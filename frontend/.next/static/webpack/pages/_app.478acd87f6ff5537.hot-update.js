"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./utils/supabaseClient.js":
/*!*********************************!*\
  !*** ./utils/supabaseClient.js ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isSupabaseAvailable: function() { return /* binding */ isSupabaseAvailable; },\n/* harmony export */   supabase: function() { return /* binding */ supabase; }\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"./node_modules/@supabase/supabase-js/dist/module/index.js\");\n\nconst supabaseUrl = \"your-supabase-project-url\";\nconst supabaseAnonKey = \"your-supabase-anon-key\";\n// Mock Supabase client for development/testing\nconst createMockSupabaseClient = ()=>({\n        auth: {\n            getSession: async ()=>({\n                    data: {\n                        session: {\n                            user: {\n                                id: \"mock-user-id\",\n                                email: \"test@example.com\"\n                            }\n                        }\n                    }\n                }),\n            onAuthStateChange: (callback)=>{\n                // Mock subscription\n                return {\n                    data: {\n                        subscription: {\n                            unsubscribe: ()=>{}\n                        }\n                    }\n                };\n            },\n            signUp: async (param)=>{\n                let { email, password } = param;\n                return {\n                    error: null\n                };\n            },\n            signInWithPassword: async (param)=>{\n                let { email, password } = param;\n                return {\n                    error: null\n                };\n            },\n            signOut: async ()=>({\n                    error: null\n                })\n        }\n    });\n// Use real Supabase if credentials are provided, otherwise use mock\nconst supabase = supabaseUrl && supabaseAnonKey ? (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseAnonKey) : createMockSupabaseClient();\n// Helper function to check if Supabase is available\nconst isSupabaseAvailable = ()=>{\n    return supabaseUrl && supabaseAnonKey;\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi91dGlscy9zdXBhYmFzZUNsaWVudC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBcUQ7QUFFckQsTUFBTUMsY0FBY0MsMkJBQW9DO0FBQ3hELE1BQU1HLGtCQUFrQkgsd0JBQXlDO0FBRWpFLCtDQUErQztBQUMvQyxNQUFNSywyQkFBMkIsSUFBTztRQUN0Q0MsTUFBTTtZQUNKQyxZQUFZLFVBQWE7b0JBQ3ZCQyxNQUFNO3dCQUNKQyxTQUFTOzRCQUNQQyxNQUFNO2dDQUNKQyxJQUFJO2dDQUNKQyxPQUFPOzRCQUNUO3dCQUNGO29CQUNGO2dCQUNGO1lBQ0FDLG1CQUFtQixDQUFDQztnQkFDbEIsb0JBQW9CO2dCQUNwQixPQUFPO29CQUNMTixNQUFNO3dCQUNKTyxjQUFjOzRCQUNaQyxhQUFhLEtBQU87d0JBQ3RCO29CQUNGO2dCQUNGO1lBQ0Y7WUFDQUMsUUFBUTtvQkFBTyxFQUFFTCxLQUFLLEVBQUVNLFFBQVEsRUFBRTt1QkFBTTtvQkFBRUMsT0FBTztnQkFBSztZQUFBO1lBQ3REQyxvQkFBb0I7b0JBQU8sRUFBRVIsS0FBSyxFQUFFTSxRQUFRLEVBQUU7dUJBQU07b0JBQUVDLE9BQU87Z0JBQUs7WUFBQTtZQUNsRUUsU0FBUyxVQUFhO29CQUFFRixPQUFPO2dCQUFLO1FBQ3RDO0lBQ0Y7QUFFQSxvRUFBb0U7QUFDN0QsTUFBTUcsV0FBV3ZCLGVBQWVJLGtCQUNuQ0wsbUVBQVlBLENBQUNDLGFBQWFJLG1CQUMxQkUsMkJBQTJCO0FBRS9CLG9EQUFvRDtBQUM3QyxNQUFNa0Isc0JBQXNCO0lBQ2pDLE9BQU94QixlQUFlSTtBQUN4QixFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3V0aWxzL3N1cGFiYXNlQ2xpZW50LmpzPzVhZDEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlQ2xpZW50IH0gZnJvbSAnQHN1cGFiYXNlL3N1cGFiYXNlLWpzJztcclxuXHJcbmNvbnN0IHN1cGFiYXNlVXJsID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMO1xyXG5jb25zdCBzdXBhYmFzZUFub25LZXkgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWTtcclxuXHJcbi8vIE1vY2sgU3VwYWJhc2UgY2xpZW50IGZvciBkZXZlbG9wbWVudC90ZXN0aW5nXHJcbmNvbnN0IGNyZWF0ZU1vY2tTdXBhYmFzZUNsaWVudCA9ICgpID0+ICh7XHJcbiAgYXV0aDoge1xyXG4gICAgZ2V0U2Vzc2lvbjogYXN5bmMgKCkgPT4gKHtcclxuICAgICAgZGF0YToge1xyXG4gICAgICAgIHNlc3Npb246IHtcclxuICAgICAgICAgIHVzZXI6IHtcclxuICAgICAgICAgICAgaWQ6ICdtb2NrLXVzZXItaWQnLFxyXG4gICAgICAgICAgICBlbWFpbDogJ3Rlc3RAZXhhbXBsZS5jb20nXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9KSxcclxuICAgIG9uQXV0aFN0YXRlQ2hhbmdlOiAoY2FsbGJhY2spID0+IHtcclxuICAgICAgLy8gTW9jayBzdWJzY3JpcHRpb25cclxuICAgICAgcmV0dXJuIHtcclxuICAgICAgICBkYXRhOiB7XHJcbiAgICAgICAgICBzdWJzY3JpcHRpb246IHtcclxuICAgICAgICAgICAgdW5zdWJzY3JpYmU6ICgpID0+IHt9XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9O1xyXG4gICAgfSxcclxuICAgIHNpZ25VcDogYXN5bmMgKHsgZW1haWwsIHBhc3N3b3JkIH0pID0+ICh7IGVycm9yOiBudWxsIH0pLFxyXG4gICAgc2lnbkluV2l0aFBhc3N3b3JkOiBhc3luYyAoeyBlbWFpbCwgcGFzc3dvcmQgfSkgPT4gKHsgZXJyb3I6IG51bGwgfSksXHJcbiAgICBzaWduT3V0OiBhc3luYyAoKSA9PiAoeyBlcnJvcjogbnVsbCB9KVxyXG4gIH1cclxufSk7XHJcblxyXG4vLyBVc2UgcmVhbCBTdXBhYmFzZSBpZiBjcmVkZW50aWFscyBhcmUgcHJvdmlkZWQsIG90aGVyd2lzZSB1c2UgbW9ja1xyXG5leHBvcnQgY29uc3Qgc3VwYWJhc2UgPSBzdXBhYmFzZVVybCAmJiBzdXBhYmFzZUFub25LZXkgXHJcbiAgPyBjcmVhdGVDbGllbnQoc3VwYWJhc2VVcmwsIHN1cGFiYXNlQW5vbktleSlcclxuICA6IGNyZWF0ZU1vY2tTdXBhYmFzZUNsaWVudCgpO1xyXG5cclxuLy8gSGVscGVyIGZ1bmN0aW9uIHRvIGNoZWNrIGlmIFN1cGFiYXNlIGlzIGF2YWlsYWJsZVxyXG5leHBvcnQgY29uc3QgaXNTdXBhYmFzZUF2YWlsYWJsZSA9ICgpID0+IHtcclxuICByZXR1cm4gc3VwYWJhc2VVcmwgJiYgc3VwYWJhc2VBbm9uS2V5O1xyXG59OyAiXSwibmFtZXMiOlsiY3JlYXRlQ2xpZW50Iiwic3VwYWJhc2VVcmwiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMIiwic3VwYWJhc2VBbm9uS2V5IiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVkiLCJjcmVhdGVNb2NrU3VwYWJhc2VDbGllbnQiLCJhdXRoIiwiZ2V0U2Vzc2lvbiIsImRhdGEiLCJzZXNzaW9uIiwidXNlciIsImlkIiwiZW1haWwiLCJvbkF1dGhTdGF0ZUNoYW5nZSIsImNhbGxiYWNrIiwic3Vic2NyaXB0aW9uIiwidW5zdWJzY3JpYmUiLCJzaWduVXAiLCJwYXNzd29yZCIsImVycm9yIiwic2lnbkluV2l0aFBhc3N3b3JkIiwic2lnbk91dCIsInN1cGFiYXNlIiwiaXNTdXBhYmFzZUF2YWlsYWJsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./utils/supabaseClient.js\n"));

/***/ })

});